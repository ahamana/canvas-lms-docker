# syntax=docker/dockerfile:1

ARG NODE_VERSION=lts
ARG RUBY_VERSION=3.4
ARG CANVAS_HOME=/opt/canvas

FROM node:${NODE_VERSION}-trixie-slim AS node

RUN corepack disable yarn

FROM ruby:${RUBY_VERSION}-trixie AS builder

ARG GIT_BRANCH=prod
ARG CANVAS_HOME

COPY --link --from=node /usr/local/bin /usr/local/bin
COPY --link --from=node /usr/local/lib/node_modules /usr/local/lib/node_modules

RUN <<EOF
apt-get update
apt-get install -y --no-install-recommends \
    libidn-dev \
    libxmlsec1-dev
EOF

ADD --link https://api.github.com/repos/instructure/canvas-lms/git/refs/heads/${GIT_BRANCH} /dev/null
RUN git clone -b ${GIT_BRANCH} --depth 1 https://github.com/instructure/canvas-lms.git ${CANVAS_HOME}

WORKDIR ${CANVAS_HOME}

RUN <<EOF
npm update -g npm

corepack enable yarn

yarn config set network-timeout 600000
yarn config set network-concurrency 1
yarn install --pure-lockfile

bundle install
bundle exec rake canvas:compile_assets_dev

rm -rf \
    .devcontainer \
    .git \
    .github \
    .storybook \
    .vscode \
    build \
    doc \
    docker-compose \
    hooks \
    inst-cli \
    jest \
    log/* \
    node_modules \
    patches \
    tmp/* \
    ui \
    ui-build
rm \
    .codeclimate.yml \
    .dependency-cruiser.js \
    .devcontainer.json \
    .dive-ci \
    .dockerignore \
    .editorconfig \
    .git-blame-ignore-revs \
    .gitignore \
    .gitmessage \
    .groovylintrc.json \
    .i18nignore \
    .i18nrc \
    .irbrc \
    .lintstagedrc.js \
    .npmrc \
    .nvmrc \
    .rspec \
    .rubocop.yml \
    .sentryignore \
    .stylelintrc \
    .yarnrc.yml \
    CONTRIBUTING.md \
    COPYRIGHT \
    Dockerfile* \
    Jenkinsfile* \
    LICENSE \
    README.md \
    SECURITY.md \
    biome.json \
    code_of_conduct.md \
    config/*.yml.* \
    docker-compose* \
    eslint.config*.js \
    gulpfile.js \
    issue_template.md \
    jest.config.js \
    package.json \
    renovate.json \
    rspack.config.js \
    tsconfig.json \
    vitest.*.ts \
    yarn.lock
EOF

COPY --link canvas ${CANVAS_HOME}

FROM ruby:${RUBY_VERSION}-slim-trixie AS runner

ARG CANVAS_HOME
ARG CANVAS_GROUP_ID=1000
ARG CANVAS_USER_ID=1000
ARG CANVAS_USER=canvas

ENV RUBYLIB=${CANVAS_HOME}

RUN <<EOF
apt-get update
apt-get install -y --no-install-recommends \
    file \
    git \
    libbrotli1 \
    libicu76 \
    libidn12 \
    libpq5 \
    libsqlite3-0 \
    libxmlsec1-openssl \
    shared-mime-info
apt-get clean
rm -rf /var/lib/apt/lists/*

groupadd -g ${CANVAS_GROUP_ID} ${CANVAS_USER}
useradd -l -g ${CANVAS_USER} -u ${CANVAS_USER_ID} -d ${CANVAS_HOME} ${CANVAS_USER}
EOF

COPY --link --from=builder --chown=${CANVAS_USER_ID} ${GEM_HOME} ${GEM_HOME}
COPY --link --from=builder --chown=${CANVAS_USER_ID} ${CANVAS_HOME} ${CANVAS_HOME}
COPY --link docker-entrypoint.sh /usr/local/bin/

WORKDIR ${CANVAS_HOME}

USER ${CANVAS_USER}

RUN mkdir -p tmp/files

EXPOSE 3000

ENTRYPOINT ["docker-entrypoint.sh"]

CMD ["bundle", "exec", "rails", "server", "-b", "0.0.0.0"]
