services:
  app:
    container_name: canvas
    ports:
      - published: 80
        target: 3000
    environment:
      CANVAS_LMS_DOMAIN: ${CANVAS_LMS_DOMAIN}
      CANVAS_LMS_ADMIN_EMAIL: ${CANVAS_LMS_ADMIN_EMAIL}
      CANVAS_LMS_ADMIN_PASSWORD: ${CANVAS_LMS_ADMIN_PASSWORD}
      CANVAS_LMS_ACCOUNT_NAME: ${CANVAS_LMS_ACCOUNT_NAME}
      CANVAS_LMS_STATS_COLLECTION: ${CANVAS_LMS_STATS_COLLECTION}
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_DB}
      DB_DRIVER: postgresql
      REDIS_HOST: redis
      EMAIL_DOMAIN: ${EMAIL_DOMAIN}
      EMAIL_HOST: smtp
      EMAIL_PORT: 1025
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      EMAIL_SENDER_ADDRESS: ${EMAIL_SENDER_ADDRESS}
      EMAIL_SENDER_NAME: ${EMAIL_SENDER_NAME}
      TZ: ${TZ}
    volumes:
      - type: volume
        source: app-volume
        target: /opt/canvas/tmp/files
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      smtp:
        condition: service_started

  db:
    image: postgres:17
    container_name: postgres
    ports:
      - published: 5432
        target: 5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      TZ: ${TZ}
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
    volumes:
      - type: volume
        source: db-volume
        target: /var/lib/postgresql/data

  redis:
    image: redis:8
    container_name: redis
    environment:
      TZ: ${TZ}
    command: redis-server --appendonly yes
    healthcheck:
      test: redis-cli ping
    volumes:
      - type: volume
        source: redis-volume
        target: /data

  smtp:
    image: axllent/mailpit
    container_name: mailpit
    environment:
      MP_SMTP_AUTH: ${EMAIL_HOST_USER}:${EMAIL_HOST_PASSWORD}
      MP_SMTP_AUTH_ALLOW_INSECURE: true
    ports:
      - published: 8025
        target: 8025

volumes:
  app-volume:
  db-volume:
  redis-volume:
