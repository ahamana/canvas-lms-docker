# syntax=docker/dockerfile:1

ARG DEBIAN_CODENAME=trixie
ARG NODE_VERSION=lts
ARG RUBY_VERSION=3.4
ARG CANVAS_HOME=/opt/canvas

FROM node:${NODE_VERSION}-${DEBIAN_CODENAME}-slim AS node

RUN corepack disable yarn

FROM ruby:${RUBY_VERSION}-${DEBIAN_CODENAME} AS builder

ARG GIT_BRANCH=prod
ARG CANVAS_HOME

ENV RAILS_ENV=production
ENV COMPILE_ASSETS_BRAND_CONFIGS=0

COPY --link --from=node /usr/local/bin /usr/local/bin
COPY --link --from=node /usr/local/lib/node_modules /usr/local/lib/node_modules

RUN <<EOF
apt-get update
apt-get install -y --no-install-recommends \
    libidn-dev \
    libxmlsec1-dev
EOF

ADD --link https://api.github.com/repos/instructure/canvas-lms/git/refs/heads/${GIT_BRANCH} /dev/null
ADD --link https://api.github.com/repos/instructure/QTIMigrationTool/git/refs/heads/ /dev/null

RUN <<EOF
git clone -b ${GIT_BRANCH} --depth 1 https://github.com/instructure/canvas-lms.git ${CANVAS_HOME}
# https://github.com/instructure/QTIMigrationTool/wiki
git clone --depth 1 https://github.com/instructure/QTIMigrationTool.git ${CANVAS_HOME}/vendor/QTIMigrationTool
EOF

WORKDIR ${CANVAS_HOME}

RUN <<EOF
corepack enable yarn

bundle install

rails canvas:compile_assets

rm -rf \
    .claude \
    .devcontainer \
    .github \
    .storybook \
    .vscode \
    build \
    doc \
    docker-compose \
    hooks \
    inst-cli \
    jest \
    node_modules \
    packages \
    patches \
    ui \
    ui-build
rm \
    .dive-ci \
    .dockerignore \
    .editorconfig \
    .git-blame-ignore-revs \
    .gitmessage \
    .i18nignore \
    .i18nrc \
    .irbrc \
    .npmrc \
    .nvmrc \
    .rspec \
    .sentryignore \
    .stylelintrc \
    config/*.yml.* \
    COPYRIGHT \
    docker-compose* \
    Dockerfile* \
    Jenkinsfile* \
    LICENSE \
    log/* \
    yarn.lock
rm \
    .*.js \
    .*.json \
    .*.yml \
    *.js \
    *.json \
    *.md \
    *.ts
find \
    -type d \
    -name .git \
    -exec rm -rf {} +
find \
    -type f \
    \( \
        -name .gitignore \
    -or -name .keep \
    \) \
    -delete
EOF

FROM ruby:${RUBY_VERSION}-slim-${DEBIAN_CODENAME}

ARG CANVAS_HOME
ARG CANVAS_GROUP_ID=1000
ARG CANVAS_USER_ID=1000
ARG CANVAS_USER=canvas
ARG RAILS_PORT=3000

ENV BINDING=0.0.0.0
ENV PORT=${RAILS_PORT}

RUN <<EOF
apt-get update
apt-get install -y --no-install-recommends \
    file \
    libbrotli1 \
    libicu76 \
    libidn12 \
    libpq5 \
    libsqlite3-0 \
    libxmlsec1-openssl \
    python3 \
    python3-lxml \
    shared-mime-info
rm -rf /var/lib/apt/lists/*

groupadd -g ${CANVAS_GROUP_ID} ${CANVAS_USER}
useradd -l -g ${CANVAS_USER} -u ${CANVAS_USER_ID} -d ${CANVAS_HOME} ${CANVAS_USER}
EOF

COPY --link --from=builder --chown=${CANVAS_USER_ID} ${GEM_HOME} ${GEM_HOME}
COPY --link --from=builder --chown=${CANVAS_USER_ID} ${CANVAS_HOME} ${CANVAS_HOME}

WORKDIR ${CANVAS_HOME}

USER ${CANVAS_USER}

EXPOSE ${RAILS_PORT}

CMD ["rails", "server"]

# vim:set filetype=dockerfile:
